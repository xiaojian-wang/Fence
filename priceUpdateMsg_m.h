//
// Generated file, do not edit! Created by opp_msgtool 6.0 from priceUpdateMsg.msg.
//

#ifndef __PRICEUPDATEMSG_M_H
#define __PRICEUPDATEMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class priceUpdateMsg;
/**
 * Class generated from <tt>priceUpdateMsg.msg:17</tt> by opp_msgtool.
 * <pre>
 * packet priceUpdateMsg
 * {
 *     double nLocal;
 *     double serviceRate;
 *     double arrivalRate;
 *     double queueSize;
 *     double flow_amount; // OnlineScheme: need finially a new message class but now just a test here.
 * }
 * </pre>
 */
class priceUpdateMsg : public ::omnetpp::cPacket
{
  protected:
    double nLocal = 0;
    double serviceRate = 0;
    double arrivalRate = 0;
    double queueSize = 0;
    double flow_amount = 0;

  private:
    void copy(const priceUpdateMsg& other);

  protected:
    bool operator==(const priceUpdateMsg&) = delete;

  public:
    priceUpdateMsg(const char *name=nullptr, short kind=0);
    priceUpdateMsg(const priceUpdateMsg& other);
    virtual ~priceUpdateMsg();
    priceUpdateMsg& operator=(const priceUpdateMsg& other);
    virtual priceUpdateMsg *dup() const override {return new priceUpdateMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual double getNLocal() const;
    virtual void setNLocal(double nLocal);

    virtual double getServiceRate() const;
    virtual void setServiceRate(double serviceRate);

    virtual double getArrivalRate() const;
    virtual void setArrivalRate(double arrivalRate);

    virtual double getQueueSize() const;
    virtual void setQueueSize(double queueSize);

    virtual double getFlow_amount() const;
    virtual void setFlow_amount(double flow_amount);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const priceUpdateMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, priceUpdateMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline priceUpdateMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<priceUpdateMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __PRICEUPDATEMSG_M_H

