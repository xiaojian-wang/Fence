//
// Generated file, do not edit! Created by opp_msgtool 6.0 from updateMsg.msg.
//

#ifndef __UPDATEMSG_M_H
#define __UPDATEMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class updateMsg;
/**
 * Class generated from <tt>updateMsg.msg:17</tt> by opp_msgtool.
 * <pre>
 * packet updateMsg
 * {
 *     double amount;
 *     int transactionId; //is messageID of transactionMsg
 *     int htlcIndex;
 * }
 * </pre>
 */
class updateMsg : public ::omnetpp::cPacket
{
  protected:
    double amount = 0;
    int transactionId = 0;
    int htlcIndex = 0;

  private:
    void copy(const updateMsg& other);

  protected:
    bool operator==(const updateMsg&) = delete;

  public:
    updateMsg(const char *name=nullptr, short kind=0);
    updateMsg(const updateMsg& other);
    virtual ~updateMsg();
    updateMsg& operator=(const updateMsg& other);
    virtual updateMsg *dup() const override {return new updateMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual double getAmount() const;
    virtual void setAmount(double amount);

    virtual int getTransactionId() const;
    virtual void setTransactionId(int transactionId);

    virtual int getHtlcIndex() const;
    virtual void setHtlcIndex(int htlcIndex);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const updateMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, updateMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline updateMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<updateMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __UPDATEMSG_M_H

